{%- macro func_params(self_param, pa, is_abi = false) -%}
{%- if let Some(s) = self_param -%}
{{s.render(lifetime_env, *is_abi)}} {%- if pa.len() > 0 -%}, {% endif -%}
{%- endif -%}

{%- for p in pa -%} {{p.var_name}} : {{p.render(lifetime_env, *is_abi)}} {%- if !loop.last %}, {% endif -%} {%- endfor -%}
{%- endmacro -%}

{%- block function_impl -%}
pub fn {{name}}(
        {%- if is_write -%}
        {%- call func_params(self_param, &params[..params.len() - 1]) -%}
        {%- else -%}
        {%- call func_params(self_param, params) -%}
        {%- endif -%}
    ) {%- if let Some(r) = return_type %} -> {{r.render(lifetime_env, false)}} {%- endif %} {
    {% if is_write -%}
    let mut write = crate::DiplomatWrite::new();
    let write_mut = &mut write;
    {% endif -%}
    let ret = unsafe { {{abi_name}}(
        {%- if let Some(s) = self_param -%} self {%- if params.len() > 0 -%}, {% endif -%} {%- endif -%}

        {%- for p in params -%} 
        {{p.var_name}}{{p.convert()}}
        {%- if !loop.last %}, {% endif -%}
        {%- endfor -%}
        ) };
    {% if is_write -%}
    let out_str = write.to_string();
    {%- match return_info  -%}
    {%- when ReturnType::Fallible(..) %}
    if ret.is_ok {
        Ok(out_str)
    } else {
        Err(ret.unwrap_err())
    }
    {%- when ReturnType::Nullable(..) %}
    if ret.is_ok {
        Some(out_str)
    } else {
        None
    }
    {%- when _ %}
    out_str
    {%- endmatch -%}
    {%- else -%}
    ret{% if let Some(r) = return_type %}{{r.convert()}}{% endif %}
    {%- endif %}
}
{%- endblock -%}

{%- block function_def -%}
    fn {{abi_name}}(
        {%- call func_params(self_param, params, true) -%}
    ) 
        
        {%- if let Some(r) = return_type %} -> {{r.render(lifetime_env, true)}} {%- endif %};
{%- endblock -%}