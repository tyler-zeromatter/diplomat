{%- macro func_params(self_param, pa, is_abi = false) -%}
{%- if let Some(s) = self_param -%}
{{s.type_name(*is_abi)}} {%- if pa.len() > 0 -%}, {% endif -%}
{%- endif -%}

{%- for p in pa -%} {{p.var_name}} : {{p.type_name(*is_abi)}} {%- if !loop.last %}, {% endif -%} {%- endfor -%}
{%- endmacro -%}

{%- block function_impl -%}
pub fn {{name}}(
        {%- if is_write -%}
        {%- call func_params(self_param, &params[..params.len() - 1]) -%}
        {%- else -%}
        {%- call func_params(self_param, params) -%}
        {%- endif -%}
    ) {%- if let Some(r) = return_type %} -> {{r.type_name(false)}} {%- endif %} {
    {% if is_write -%}
    let write = unsafe {
        diplomat_runtime::diplomat_buffer_write_create(0)
    };
    {% endif -%}
    let ret = unsafe { {{abi_name}}(
        {%- if let Some(s) = self_param -%} self {%- if params.len() > 0 -%}, {% endif -%} {%- endif -%}

        {%- for p in params -%} 
        {{p.var_name}}
        {%- if !loop.last %}, {% endif -%}
        {%- endfor -%}
        ) };
    {% if is_write -%}
    let out_str = unsafe {
        let write_ref = write.as_ref().unwrap();
        let buf = diplomat_runtime::diplomat_buffer_write_get_bytes(write_ref);
        let len = diplomat_runtime::diplomat_buffer_write_len(write_ref);

        if !buf.is_null() {
            String::from_raw_parts(buf, len, len)
        } else {
            panic!("Could not read buffer, growth failed.")
        }
    };

    unsafe {
        diplomat_runtime::diplomat_buffer_write_destroy(write);
    }
    out_str
    {%- else -%}
    ret
    {%- endif %}
}
{%- endblock -%}

{%- block function_def -%}
    fn {{abi_name}}(
        {%- call func_params(self_param, params, true) -%}
    ) 
        
        {%- if let Some(r) = return_type %} -> {{r.type_name(true)}} {%- endif %};
{%- endblock -%}